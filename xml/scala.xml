<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<language
  name="Scala"
  version="1.1"
  kateversion="2.4"
  section="Sources"
  extensions="*.scala"
  mimetype="text/x-scala"
  license="ALv2"
  author="Travis Brown (travisrobertbrown@gmail.com)">
  <!--
    Adapted by Stephane Micheloud (stephane.micheloud@epfl.ch)
      from "java.xml" by Alfredo Luiz Foltran Fialho (alfoltran@ig.com.br)
      and further refined by Travis Brown (travisrobertbrown@gmail.com).
  -->
  <highlighting>
    <list name="keywords">
      <item> abstract </item>
      <item> case </item>
      <item> catch </item>
      <item> class </item>
      <item> def </item>
      <item> do </item>
      <item> else </item>
      <item> extends </item>
      <item> false </item>
      <item> final </item>
      <item> finally </item>
      <item> for </item>
      <item> forSome </item>
      <item> if </item>
      <item> implicit </item>
      <item> import </item>
      <item> lazy </item>
      <item> macro </item>
      <item> match </item>
      <item> new </item>
      <item> null </item>
      <item> object </item>
      <item> override </item>
      <item> package </item>
      <item> private </item>
      <item> protected </item>
      <item> requires </item>
      <item> return </item>
      <item> sealed </item>
      <item> super </item>
      <item> this </item>
      <item> throw </item>
      <item> trait </item>
      <item> true </item>
      <item> try </item>
      <item> type </item>
      <item> val </item>
      <item> var </item>
      <item> while </item>
      <item> with </item>
      <item> yield </item>
    </list>
    <contexts>
      <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
        <!-- Comment next line if you don't use Javadoc tool -->
        <RegExpr attribute="Keyword" context="Imports" String="\b(package|import)\b" />
        <IncludeRules context="##Javadoc"/>
        <keyword attribute="Keyword" context="#stay" String="keywords"/>
        <Float attribute="Float" context="#stay">
          <AnyChar String="fF" attribute="Float" context="#stay"/>
        </Float>
        <HlCOct attribute="Octal" context="#stay"/>
        <HlCHex attribute="Hex" context="#stay"/>
        <Int attribute="Decimal" context="#stay">
          <StringDetect attribute="Decimal" context="#stay" String="ULL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LUL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LLU" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="UL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LU" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="U" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="L" insensitive="TRUE"/>
        </Int>
        <HlCChar attribute="Char" context="#stay"/>
        <RegExpr attribute="Decimal" context="#stay" String="//\s*BEGIN.*$" beginRegion="Region1"/>
        <RegExpr attribute="Decimal" context="#stay" String="//\s*END.*$" endRegion="Region1"/>
        <DetectChar attribute="String" context="String" char="&quot;"/>
        <RegExpr attribute="Function" context="Printf" String="\.(format|printf)\b" />
        <Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
        <Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
        <DetectChar attribute="Symbol" context="#stay" char="{" beginRegion="Brace1"/>
        <DetectChar attribute="Symbol" context="#stay" char="}" endRegion="Brace1"/>
        <RegExpr attribute="Function" context="#stay" String="\b[_\w][_\w\d]*(?=[\s]*(/\*\s*\d+\s*\*/\s*)?[(])" />
        <RegExpr attribute="Symbol" context="Member" String="[.]{1,1}" />
        <DetectChar attribute="Symbol" context="TypeParamTop" char="["/>
        <RegExpr attribute="Symbol" context="TypeAnnot" String="[^:]?:\s"/>
        <AnyChar attribute="Symbol" context="#stay" String=":!%&amp;()+,-/.*&lt;=&gt;?[]|~^&#59;"/>
      </context>
      <context attribute="Data Type" lineEndContext="#stay" name="TypeParamTop">
        <DetectChar attribute="Data Type" context="TypeParam" char="["/>
        <DetectChar attribute="Symbol" context="#pop" char="]"/>
      </context>
      <context attribute="Data Type" lineEndContext="#stay" name="TypeParam">
        <DetectChar attribute="Data Type" context="TypeParam" char="["/>
        <DetectChar attribute="Data Type" context="#pop" char="]"/>
      </context>
      <context attribute="Data Type" lineEndContext="#stay" name="TypeAnnot">
        <DetectChar attribute="Data Type" context="TypeParam" char="["/>
        <RegExpr attribute="Data Type" context="#stay" String="\w+"/>
        <RegExpr attribute="Data Type" context="#stay" String=" => "/>
        <RegExpr attribute="Normal Text" context="#pop" String="[\)|\s]"/>
      </context>
      <context attribute="String" lineEndContext="#pop" name="String">
        <LineContinue attribute="String" context="#stay"/>
        <HlCStringChar attribute="String Char" context="#stay"/>
        <DetectChar attribute="String" context="#pop" char="&quot;"/>
      </context>
      <context attribute="Printf" lineEndContext="#pop" name="Printf">
        <DetectChar attribute="Normal Text" context="#pop" char="&#059;" />
        <DetectChar attribute="String" context="PrintfString" char="&quot;"/>
      </context>
      <context attribute="PrintfString" lineEndContext="#pop" name="PrintfString">
        <LineContinue attribute="String" context="#stay"/>
        <HlCStringChar attribute="String Char" context="#stay"/>
        <DetectChar attribute="String" context="#pop" char="&quot;"/>
        <RegExpr attribute="String Char" context="#stay" String="%(\d+\$)?(-|#|\+|\ |0|,|\()*\d*(\.\d+)?[a-hosxA-CEGHSX]" />
        <RegExpr attribute="String Char" context="#stay" String="%(\d+\$)?(-|#|\+|\ |0|,|\()*\d*(t|T)(a|A|b|B|c|C|d|D|e|F|h|H|I|j|k|l|L|m|M|N|p|P|Q|r|R|s|S|T|y|Y|z|Z)" />
        <RegExpr attribute="String Char" context="#stay" String="%(%|n)" />
      </context>
      <context attribute="Normal Text" lineEndContext="#pop" name="Member" fallthrough="true" fallthroughContext="#pop">
        <RegExpr attribute="Function" context="#pop" String="\b[_a-zA-Z]\w*(?=[\s]*)" />
      </context>
      <context attribute="Normal Text" lineEndContext="#pop" name="Imports">
        <DetectChar attribute="String" context="#pop" char=";"/>
      </context>
      <context attribute="Comment" lineEndContext="#pop" name="Commentar 1"/>
      <context attribute="Comment" lineEndContext="#stay" name="Commentar 2">
        <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" endRegion="Comment"/>
      </context>
    </contexts>
    <itemDatas>
      <itemData name="Normal Text"  defStyleNum="dsNormal"/>
      <itemData name="Keyword"      defStyleNum="dsKeyword"/>
      <itemData name="Function"     defStyleNum="dsFunction"/>
      <itemData name="Data Type"    defStyleNum="dsDataType"/>
      <itemData name="Decimal"      defStyleNum="dsDecVal"/>
      <itemData name="Octal"        defStyleNum="dsBaseN"/>
      <itemData name="Hex"          defStyleNum="dsBaseN"/>
      <itemData name="Float"        defStyleNum="dsFloat"/>
      <itemData name="Char"         defStyleNum="dsChar"/>
      <itemData name="String"       defStyleNum="dsString"/>
      <itemData name="String Char"  defStyleNum="dsChar"/>
      <itemData name="PrintfString" defStyleNum="dsString"/>
      <itemData name="Comment"      defStyleNum="dsComment"/>
      <itemData name="Symbol"       defStyleNum="dsNormal"/>
    </itemDatas>
  </highlighting>
  <general>
    <comments>
      <comment name="singleLine" start="//"/>
      <comment name="multiLine" start="/*" end="*/"/>
    </comments>
    <keywords casesensitive="1"/>
  </general>
</language>
